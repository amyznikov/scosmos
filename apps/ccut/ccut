#!/bin/bash

cols=""
files=""
cond=""
xcond=""
defs=""

function showhelp()
{
  echo "Usage:";
  echo "  ccut -f coma,delimited,list,of,columns [-x 'condition-expression'] [-v var=value ...] [FILE]";
}

while [ -n "$1" ] ; do
    arg=$1
    case $arg in
     --help)
      showhelp;
      exit 0
      ;;

     -f)
      shift;
      [ -z "$cols" ] && cols="$1" || cols="$cols\\t$1" ; cols=${cols//,/\\t}
      ;;


     -c)
      shift;
      if [[ $cond != "" ]] || [[ $xcond != "" ]] ; then
        echo -e "Error: multiple conditions not allowed. Note that -c switch is depreceated, use -x instead" 1>&2;
        exit 1;
      else
        cond="$1";
      fi
      ;;


     -x)
      shift;
        if [[ $cond != "" ]] || [[ $xcond != "" ]] ; then
          echo -e "Error: multiple conditions not allowed." 1>&2;
          exit 1;
        else
          xcond="$1";
        fi
        ;;

     -v)
      shift;
      defs="$defs -v $1"
      ;;


      *)
        files="$files $arg"
        ;;

    esac;
    shift;
done


if [[ -z "$cols" ]]; then
  showhelp;
  exit 1;
fi


start='
  BEGIN {
    # get output column names requested in command line
    n = split(outputcols,col);
    for ( i = 1; i <= n; ++i) {
      ocn[i] = col[i];
    }
  }
  NR == 1 {
    # get column names from file header
    for ( f = 1; f <= NF; ++f ) {
      ocff[$f] = f;
    }

    if ( n == 0 ) {
      print $0;
    }
    else {
      # match requested column indexes with file header column indexes
      for ( i = 1; i <= n; ++i )
      {
        for ( f = 1; f <= NF; ++f )
        if ( $f == ocn[i] ) {
          ocf[i] = f;
          break;
        }
        if ( f > NF ) {
          print "Column " ocn[i] " not found in file header" > "/dev/stderr"
          exit 1;
        }
      }

      # print output header
      for ( i = 1; i < n; ++i ) {
        printf("%s\t", $ocf[i]);
      }
      printf("%s\n", $ocf[n]);
    }
    next
  }
'

if [[ -n "$cond" ]]; then
  cond=$(echo "$cond" | sed -r 's/([a-zA-Z_]\w*)/$ocff[\"\1\"]/g');
elif [[ -n "$xcond" ]]; then
  cond=$(echo "$xcond" | sed -r 's/@([a-zA-Z_]\w*)/$ocff[\"\1\"]/g');
fi


if [[ -z "$cond" ]] ; then
end='
  {
    if ( n == 0 ) {
      print $0;
    }
    else {
      for ( i = 1; i < n; ++i ) {
        printf("%s\t", $ocf[i]);
      }
      printf("%s\n", $ocf[n]);
    }
  }
'
else


end="
  {
    if ( ${cond} )
    {
      if ( n == 0 ) {
        print \$0;
      }
      else {
        for ( i = 1; i < n; ++i ) {
          printf(\"%s\t\", \$ocf[i]);
        }
        printf(\"%s\n\", \$ocf[n]);
      }
    }
  }
"
fi

script="${start}${end}"
#echo "$script"

awk $defs -v outputcols="$cols" "$script" $files
